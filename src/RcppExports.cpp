// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sph_grad_xyz
arma::cube sph_grad_xyz(arma::mat xyz, int Lmax);
RcppExport SEXP _GpGp_sph_grad_xyz(SEXP xyzSEXP, SEXP LmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type xyz(xyzSEXP);
    Rcpp::traits::input_parameter< int >::type Lmax(LmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(sph_grad_xyz(xyz, Lmax));
    return rcpp_result_gen;
END_RCPP
}
// exponential_isotropic
arma::mat exponential_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_exponential_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_isotropic
arma::cube d_exponential_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_exponential_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_isotropic
arma::mat matern_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_isotropic
arma::cube d_matern_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern15_isotropic
arma::mat matern15_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern15_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern15_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern15_isotropic
arma::cube d_matern15_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern15_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern15_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_anisotropic2D
arma::mat matern_anisotropic2D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_anisotropic2D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_anisotropic2D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_anisotropic2D
arma::cube d_matern_anisotropic2D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_anisotropic2D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_anisotropic2D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_anisotropic3D
arma::mat matern_anisotropic3D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_anisotropic3D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_anisotropic3D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_anisotropic3D
arma::cube d_matern_anisotropic3D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_anisotropic3D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_anisotropic3D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_anisotropic3D_alt
arma::mat matern_anisotropic3D_alt(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_anisotropic3D_alt(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_anisotropic3D_alt(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_anisotropic3D_alt
arma::cube d_matern_anisotropic3D_alt(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_anisotropic3D_alt(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_anisotropic3D_alt(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// exponential_anisotropic2D
arma::mat exponential_anisotropic2D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_exponential_anisotropic2D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_anisotropic2D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_anisotropic2D
arma::cube d_exponential_anisotropic2D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_exponential_anisotropic2D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_anisotropic2D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// exponential_anisotropic3D
arma::mat exponential_anisotropic3D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_exponential_anisotropic3D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_anisotropic3D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_anisotropic3D
arma::cube d_exponential_anisotropic3D(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_exponential_anisotropic3D(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_anisotropic3D(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// exponential_anisotropic3D_alt
arma::mat exponential_anisotropic3D_alt(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_exponential_anisotropic3D_alt(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_anisotropic3D_alt(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_anisotropic3D_alt
arma::cube d_exponential_anisotropic3D_alt(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_exponential_anisotropic3D_alt(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_anisotropic3D_alt(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_scaledim
arma::mat matern_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_scaledim
arma::cube d_matern_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// exponential_scaledim
arma::mat exponential_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_exponential_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_scaledim
arma::cube d_exponential_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_exponential_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_spacetime
arma::mat matern_spacetime(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_spacetime(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_spacetime(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_spacetime
arma::cube d_matern_spacetime(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_spacetime(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_spacetime(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// exponential_spacetime
arma::mat exponential_spacetime(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_exponential_spacetime(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_spacetime(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_spacetime
arma::cube d_exponential_spacetime(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_exponential_spacetime(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_spacetime(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_sphere
arma::mat matern_sphere(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_matern_sphere(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_sphere(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_sphere
arma::cube d_matern_sphere(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_d_matern_sphere(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_sphere(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// exponential_sphere
arma::mat exponential_sphere(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_exponential_sphere(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_sphere(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_sphere
arma::cube d_exponential_sphere(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_d_exponential_sphere(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_sphere(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// matern_spheretime
arma::mat matern_spheretime(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_matern_spheretime(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_spheretime(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_spheretime
arma::cube d_matern_spheretime(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_d_matern_spheretime(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_spheretime(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// exponential_spheretime
arma::mat exponential_spheretime(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_exponential_spheretime(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_spheretime(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_spheretime
arma::cube d_exponential_spheretime(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_d_exponential_spheretime(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_spheretime(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// matern_sphere_warp
arma::mat matern_sphere_warp(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_matern_sphere_warp(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_sphere_warp(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_sphere_warp
arma::cube d_matern_sphere_warp(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_d_matern_sphere_warp(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_sphere_warp(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// exponential_sphere_warp
arma::mat exponential_sphere_warp(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_exponential_sphere_warp(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_sphere_warp(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_sphere_warp
arma::cube d_exponential_sphere_warp(arma::vec covparms, arma::mat lonlat);
RcppExport SEXP _GpGp_d_exponential_sphere_warp(SEXP covparmsSEXP, SEXP lonlatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlat(lonlatSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_sphere_warp(covparms, lonlat));
    return rcpp_result_gen;
END_RCPP
}
// matern_spheretime_warp
arma::mat matern_spheretime_warp(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_matern_spheretime_warp(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_spheretime_warp(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_spheretime_warp
arma::cube d_matern_spheretime_warp(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_d_matern_spheretime_warp(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_spheretime_warp(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// exponential_spheretime_warp
arma::mat exponential_spheretime_warp(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_exponential_spheretime_warp(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_spheretime_warp(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_spheretime_warp
arma::cube d_exponential_spheretime_warp(arma::vec covparms, arma::mat lonlattime);
RcppExport SEXP _GpGp_d_exponential_spheretime_warp(SEXP covparmsSEXP, SEXP lonlattimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type lonlattime(lonlattimeSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_spheretime_warp(covparms, lonlattime));
    return rcpp_result_gen;
END_RCPP
}
// matern_nonstat_var
arma::mat matern_nonstat_var(arma::vec covparms, arma::mat Z);
RcppExport SEXP _GpGp_matern_nonstat_var(SEXP covparmsSEXP, SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_nonstat_var(covparms, Z));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_nonstat_var
arma::cube d_matern_nonstat_var(arma::vec covparms, arma::mat Z);
RcppExport SEXP _GpGp_d_matern_nonstat_var(SEXP covparmsSEXP, SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_nonstat_var(covparms, Z));
    return rcpp_result_gen;
END_RCPP
}
// exponential_nonstat_var
arma::mat exponential_nonstat_var(arma::vec covparms, arma::mat Z);
RcppExport SEXP _GpGp_exponential_nonstat_var(SEXP covparmsSEXP, SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(exponential_nonstat_var(covparms, Z));
    return rcpp_result_gen;
END_RCPP
}
// d_exponential_nonstat_var
arma::cube d_exponential_nonstat_var(arma::vec covparms, arma::mat Z);
RcppExport SEXP _GpGp_d_exponential_nonstat_var(SEXP covparmsSEXP, SEXP ZSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    rcpp_result_gen = Rcpp::wrap(d_exponential_nonstat_var(covparms, Z));
    return rcpp_result_gen;
END_RCPP
}
// matern15_scaledim
arma::mat matern15_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern15_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern15_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern15_scaledim
arma::cube d_matern15_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern15_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern15_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern25_isotropic
arma::mat matern25_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern25_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern25_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern25_isotropic
arma::cube d_matern25_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern25_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern25_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern25_scaledim
arma::mat matern25_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern25_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern25_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern25_scaledim
arma::cube d_matern25_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern25_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern25_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern35_isotropic
arma::mat matern35_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern35_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern35_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern35_isotropic
arma::cube d_matern35_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern35_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern35_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern35_scaledim
arma::mat matern35_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern35_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern35_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern35_scaledim
arma::cube d_matern35_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern35_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern35_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern45_isotropic
arma::mat matern45_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern45_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern45_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern45_isotropic
arma::cube d_matern45_isotropic(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern45_isotropic(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern45_isotropic(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern45_scaledim
arma::mat matern45_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern45_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern45_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern45_scaledim
arma::cube d_matern45_scaledim(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern45_scaledim(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern45_scaledim(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_categorical
arma::mat matern_categorical(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_categorical(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_categorical(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_categorical
arma::cube d_matern_categorical(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_categorical(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_categorical(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_spacetime_categorical
arma::mat matern_spacetime_categorical(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_spacetime_categorical(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_spacetime_categorical(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_spacetime_categorical
arma::cube d_matern_spacetime_categorical(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_spacetime_categorical(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_spacetime_categorical(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// matern_spacetime_categorical_local
arma::mat matern_spacetime_categorical_local(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_matern_spacetime_categorical_local(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(matern_spacetime_categorical_local(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// d_matern_spacetime_categorical_local
arma::cube d_matern_spacetime_categorical_local(arma::vec covparms, arma::mat locs);
RcppExport SEXP _GpGp_d_matern_spacetime_categorical_local(SEXP covparmsSEXP, SEXP locsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    rcpp_result_gen = Rcpp::wrap(d_matern_spacetime_categorical_local(covparms, locs));
    return rcpp_result_gen;
END_RCPP
}
// Linv_mult
NumericVector Linv_mult(NumericMatrix Linv, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_Linv_mult(SEXP LinvSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv(LinvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(Linv_mult(Linv, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// L_mult
NumericVector L_mult(NumericMatrix Linv, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_L_mult(SEXP LinvSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv(LinvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(L_mult(Linv, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// Linv_t_mult
NumericVector Linv_t_mult(NumericMatrix Linv, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_Linv_t_mult(SEXP LinvSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv(LinvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(Linv_t_mult(Linv, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// L_t_mult
NumericVector L_t_mult(NumericMatrix Linv, NumericVector z, IntegerMatrix NNarray);
RcppExport SEXP _GpGp_L_t_mult(SEXP LinvSEXP, SEXP zSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Linv(LinvSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(L_t_mult(Linv, z, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_Linv
NumericMatrix vecchia_Linv(arma::vec covparms, StringVector covfun_name, arma::mat locs, arma::mat NNarray, int start_ind);
RcppExport SEXP _GpGp_vecchia_Linv(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP locsSEXP, SEXP NNarraySEXP, SEXP start_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type NNarray(NNarraySEXP);
    Rcpp::traits::input_parameter< int >::type start_ind(start_indSEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_Linv(covparms, covfun_name, locs, NNarray, start_ind));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_profbeta_loglik_grad_info
List vecchia_profbeta_loglik_grad_info(NumericVector covparms, StringVector covfun_name, NumericVector y, NumericMatrix X, const NumericMatrix locs, NumericMatrix NNarray);
RcppExport SEXP _GpGp_vecchia_profbeta_loglik_grad_info(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP XSEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_profbeta_loglik_grad_info(covparms, covfun_name, y, X, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_profbeta_loglik
List vecchia_profbeta_loglik(NumericVector covparms, StringVector covfun_name, NumericVector y, NumericMatrix X, const NumericMatrix locs, NumericMatrix NNarray);
RcppExport SEXP _GpGp_vecchia_profbeta_loglik(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP XSEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_profbeta_loglik(covparms, covfun_name, y, X, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_meanzero_loglik
List vecchia_meanzero_loglik(NumericVector covparms, StringVector covfun_name, NumericVector y, const NumericMatrix locs, NumericMatrix NNarray);
RcppExport SEXP _GpGp_vecchia_meanzero_loglik(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type NNarray(NNarraySEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_meanzero_loglik(covparms, covfun_name, y, locs, NNarray));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_grouped_profbeta_loglik_grad_info
List vecchia_grouped_profbeta_loglik_grad_info(NumericVector covparms, StringVector covfun_name, NumericVector y, NumericMatrix X, const NumericMatrix locs, List NNlist);
RcppExport SEXP _GpGp_vecchia_grouped_profbeta_loglik_grad_info(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP XSEXP, SEXP locsSEXP, SEXP NNlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< List >::type NNlist(NNlistSEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_grouped_profbeta_loglik_grad_info(covparms, covfun_name, y, X, locs, NNlist));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_grouped_profbeta_loglik
List vecchia_grouped_profbeta_loglik(NumericVector covparms, StringVector covfun_name, NumericVector y, NumericMatrix X, const NumericMatrix locs, List NNlist);
RcppExport SEXP _GpGp_vecchia_grouped_profbeta_loglik(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP XSEXP, SEXP locsSEXP, SEXP NNlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< List >::type NNlist(NNlistSEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_grouped_profbeta_loglik(covparms, covfun_name, y, X, locs, NNlist));
    return rcpp_result_gen;
END_RCPP
}
// vecchia_grouped_meanzero_loglik
List vecchia_grouped_meanzero_loglik(NumericVector covparms, StringVector covfun_name, NumericVector y, const NumericMatrix locs, List NNlist);
RcppExport SEXP _GpGp_vecchia_grouped_meanzero_loglik(SEXP covparmsSEXP, SEXP covfun_nameSEXP, SEXP ySEXP, SEXP locsSEXP, SEXP NNlistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type covparms(covparmsSEXP);
    Rcpp::traits::input_parameter< StringVector >::type covfun_name(covfun_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type locs(locsSEXP);
    Rcpp::traits::input_parameter< List >::type NNlist(NNlistSEXP);
    rcpp_result_gen = Rcpp::wrap(vecchia_grouped_meanzero_loglik(covparms, covfun_name, y, locs, NNlist));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GpGp_sph_grad_xyz", (DL_FUNC) &_GpGp_sph_grad_xyz, 2},
    {"_GpGp_exponential_isotropic", (DL_FUNC) &_GpGp_exponential_isotropic, 2},
    {"_GpGp_d_exponential_isotropic", (DL_FUNC) &_GpGp_d_exponential_isotropic, 2},
    {"_GpGp_matern_isotropic", (DL_FUNC) &_GpGp_matern_isotropic, 2},
    {"_GpGp_d_matern_isotropic", (DL_FUNC) &_GpGp_d_matern_isotropic, 2},
    {"_GpGp_matern15_isotropic", (DL_FUNC) &_GpGp_matern15_isotropic, 2},
    {"_GpGp_d_matern15_isotropic", (DL_FUNC) &_GpGp_d_matern15_isotropic, 2},
    {"_GpGp_matern_anisotropic2D", (DL_FUNC) &_GpGp_matern_anisotropic2D, 2},
    {"_GpGp_d_matern_anisotropic2D", (DL_FUNC) &_GpGp_d_matern_anisotropic2D, 2},
    {"_GpGp_matern_anisotropic3D", (DL_FUNC) &_GpGp_matern_anisotropic3D, 2},
    {"_GpGp_d_matern_anisotropic3D", (DL_FUNC) &_GpGp_d_matern_anisotropic3D, 2},
    {"_GpGp_matern_anisotropic3D_alt", (DL_FUNC) &_GpGp_matern_anisotropic3D_alt, 2},
    {"_GpGp_d_matern_anisotropic3D_alt", (DL_FUNC) &_GpGp_d_matern_anisotropic3D_alt, 2},
    {"_GpGp_exponential_anisotropic2D", (DL_FUNC) &_GpGp_exponential_anisotropic2D, 2},
    {"_GpGp_d_exponential_anisotropic2D", (DL_FUNC) &_GpGp_d_exponential_anisotropic2D, 2},
    {"_GpGp_exponential_anisotropic3D", (DL_FUNC) &_GpGp_exponential_anisotropic3D, 2},
    {"_GpGp_d_exponential_anisotropic3D", (DL_FUNC) &_GpGp_d_exponential_anisotropic3D, 2},
    {"_GpGp_exponential_anisotropic3D_alt", (DL_FUNC) &_GpGp_exponential_anisotropic3D_alt, 2},
    {"_GpGp_d_exponential_anisotropic3D_alt", (DL_FUNC) &_GpGp_d_exponential_anisotropic3D_alt, 2},
    {"_GpGp_matern_scaledim", (DL_FUNC) &_GpGp_matern_scaledim, 2},
    {"_GpGp_d_matern_scaledim", (DL_FUNC) &_GpGp_d_matern_scaledim, 2},
    {"_GpGp_exponential_scaledim", (DL_FUNC) &_GpGp_exponential_scaledim, 2},
    {"_GpGp_d_exponential_scaledim", (DL_FUNC) &_GpGp_d_exponential_scaledim, 2},
    {"_GpGp_matern_spacetime", (DL_FUNC) &_GpGp_matern_spacetime, 2},
    {"_GpGp_d_matern_spacetime", (DL_FUNC) &_GpGp_d_matern_spacetime, 2},
    {"_GpGp_exponential_spacetime", (DL_FUNC) &_GpGp_exponential_spacetime, 2},
    {"_GpGp_d_exponential_spacetime", (DL_FUNC) &_GpGp_d_exponential_spacetime, 2},
    {"_GpGp_matern_sphere", (DL_FUNC) &_GpGp_matern_sphere, 2},
    {"_GpGp_d_matern_sphere", (DL_FUNC) &_GpGp_d_matern_sphere, 2},
    {"_GpGp_exponential_sphere", (DL_FUNC) &_GpGp_exponential_sphere, 2},
    {"_GpGp_d_exponential_sphere", (DL_FUNC) &_GpGp_d_exponential_sphere, 2},
    {"_GpGp_matern_spheretime", (DL_FUNC) &_GpGp_matern_spheretime, 2},
    {"_GpGp_d_matern_spheretime", (DL_FUNC) &_GpGp_d_matern_spheretime, 2},
    {"_GpGp_exponential_spheretime", (DL_FUNC) &_GpGp_exponential_spheretime, 2},
    {"_GpGp_d_exponential_spheretime", (DL_FUNC) &_GpGp_d_exponential_spheretime, 2},
    {"_GpGp_matern_sphere_warp", (DL_FUNC) &_GpGp_matern_sphere_warp, 2},
    {"_GpGp_d_matern_sphere_warp", (DL_FUNC) &_GpGp_d_matern_sphere_warp, 2},
    {"_GpGp_exponential_sphere_warp", (DL_FUNC) &_GpGp_exponential_sphere_warp, 2},
    {"_GpGp_d_exponential_sphere_warp", (DL_FUNC) &_GpGp_d_exponential_sphere_warp, 2},
    {"_GpGp_matern_spheretime_warp", (DL_FUNC) &_GpGp_matern_spheretime_warp, 2},
    {"_GpGp_d_matern_spheretime_warp", (DL_FUNC) &_GpGp_d_matern_spheretime_warp, 2},
    {"_GpGp_exponential_spheretime_warp", (DL_FUNC) &_GpGp_exponential_spheretime_warp, 2},
    {"_GpGp_d_exponential_spheretime_warp", (DL_FUNC) &_GpGp_d_exponential_spheretime_warp, 2},
    {"_GpGp_matern_nonstat_var", (DL_FUNC) &_GpGp_matern_nonstat_var, 2},
    {"_GpGp_d_matern_nonstat_var", (DL_FUNC) &_GpGp_d_matern_nonstat_var, 2},
    {"_GpGp_exponential_nonstat_var", (DL_FUNC) &_GpGp_exponential_nonstat_var, 2},
    {"_GpGp_d_exponential_nonstat_var", (DL_FUNC) &_GpGp_d_exponential_nonstat_var, 2},
    {"_GpGp_matern15_scaledim", (DL_FUNC) &_GpGp_matern15_scaledim, 2},
    {"_GpGp_d_matern15_scaledim", (DL_FUNC) &_GpGp_d_matern15_scaledim, 2},
    {"_GpGp_matern25_isotropic", (DL_FUNC) &_GpGp_matern25_isotropic, 2},
    {"_GpGp_d_matern25_isotropic", (DL_FUNC) &_GpGp_d_matern25_isotropic, 2},
    {"_GpGp_matern25_scaledim", (DL_FUNC) &_GpGp_matern25_scaledim, 2},
    {"_GpGp_d_matern25_scaledim", (DL_FUNC) &_GpGp_d_matern25_scaledim, 2},
    {"_GpGp_matern35_isotropic", (DL_FUNC) &_GpGp_matern35_isotropic, 2},
    {"_GpGp_d_matern35_isotropic", (DL_FUNC) &_GpGp_d_matern35_isotropic, 2},
    {"_GpGp_matern35_scaledim", (DL_FUNC) &_GpGp_matern35_scaledim, 2},
    {"_GpGp_d_matern35_scaledim", (DL_FUNC) &_GpGp_d_matern35_scaledim, 2},
    {"_GpGp_matern45_isotropic", (DL_FUNC) &_GpGp_matern45_isotropic, 2},
    {"_GpGp_d_matern45_isotropic", (DL_FUNC) &_GpGp_d_matern45_isotropic, 2},
    {"_GpGp_matern45_scaledim", (DL_FUNC) &_GpGp_matern45_scaledim, 2},
    {"_GpGp_d_matern45_scaledim", (DL_FUNC) &_GpGp_d_matern45_scaledim, 2},
    {"_GpGp_matern_categorical", (DL_FUNC) &_GpGp_matern_categorical, 2},
    {"_GpGp_d_matern_categorical", (DL_FUNC) &_GpGp_d_matern_categorical, 2},
    {"_GpGp_matern_spacetime_categorical", (DL_FUNC) &_GpGp_matern_spacetime_categorical, 2},
    {"_GpGp_d_matern_spacetime_categorical", (DL_FUNC) &_GpGp_d_matern_spacetime_categorical, 2},
    {"_GpGp_matern_spacetime_categorical_local", (DL_FUNC) &_GpGp_matern_spacetime_categorical_local, 2},
    {"_GpGp_d_matern_spacetime_categorical_local", (DL_FUNC) &_GpGp_d_matern_spacetime_categorical_local, 2},
    {"_GpGp_Linv_mult", (DL_FUNC) &_GpGp_Linv_mult, 3},
    {"_GpGp_L_mult", (DL_FUNC) &_GpGp_L_mult, 3},
    {"_GpGp_Linv_t_mult", (DL_FUNC) &_GpGp_Linv_t_mult, 3},
    {"_GpGp_L_t_mult", (DL_FUNC) &_GpGp_L_t_mult, 3},
    {"_GpGp_vecchia_Linv", (DL_FUNC) &_GpGp_vecchia_Linv, 5},
    {"_GpGp_vecchia_profbeta_loglik_grad_info", (DL_FUNC) &_GpGp_vecchia_profbeta_loglik_grad_info, 6},
    {"_GpGp_vecchia_profbeta_loglik", (DL_FUNC) &_GpGp_vecchia_profbeta_loglik, 6},
    {"_GpGp_vecchia_meanzero_loglik", (DL_FUNC) &_GpGp_vecchia_meanzero_loglik, 5},
    {"_GpGp_vecchia_grouped_profbeta_loglik_grad_info", (DL_FUNC) &_GpGp_vecchia_grouped_profbeta_loglik_grad_info, 6},
    {"_GpGp_vecchia_grouped_profbeta_loglik", (DL_FUNC) &_GpGp_vecchia_grouped_profbeta_loglik, 6},
    {"_GpGp_vecchia_grouped_meanzero_loglik", (DL_FUNC) &_GpGp_vecchia_grouped_meanzero_loglik, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_GpGp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
